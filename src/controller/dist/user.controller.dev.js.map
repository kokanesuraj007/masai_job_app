{"version":3,"sources":["user.controller.js"],"names":["User","require","argon2","jwt","exports","register","req","res","body","name","email","password","findOne","user","newemail","split","second","hash","status","send","newUser","role","save","messsage","console","log","login","verify","token","sign","expiresIn","messaage","getUser","findById","params","id","message"],"mappings":"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","sourcesContent":["const User=require(\"../model/user.model\");\r\nconst argon2=require(\"argon2\");\r\nconst jwt= require(\"jsonwebtoken\");\r\nexports.register=async(req,res)=>{\r\n    const {name,email,password}=req.body;\r\n    let user= await User.findOne({email:email});\r\n    let newemail=email.split(\"@\");\r\n    let second=newemail[1]\r\n    const hash= await argon2.hash(password);\r\n    try{\r\n        if(user){\r\n            return res.status(400).send(\"user already exists\")\r\n        }else{\r\n            if(second==\"masaischool.com\"){\r\n            const newUser= new User({email,password:hash,name,role:\"admin\"});\r\n            await newUser.save();\r\n            res.status(201).send({messsage:\"admin created sucessfully\",\"admin\":newUser})\r\n            }else{\r\n                const newUser= new User({email,password:hash,name});\r\n            await newUser.save();\r\n            res.status(201).send({messsage:\"user created sucessfully\",\"user\":newUser})\r\n            }\r\n        }\r\n\r\n    }\r\n    catch(e){\r\n       console.log(e.messsage)\r\n    }\r\n}\r\n\r\nexports.login=async(req,res)=>{\r\n    const {email,password}=  req.body;\r\n    const user= await User.findOne({email});\r\n    if(await argon2.verify(user.password,password)){\r\n        const token=jwt.sign({\r\n            ...user\r\n        },\"Vikalp@99\",{\r\n            expiresIn:\"7 days\"\r\n        })\r\n        return res.send({messaage:\"Login sucessfull\",token,user:user})\r\n    };\r\n    res.status(401).send(\"Invalid Crendential\")\r\n}\r\n\r\nexports.getUser=async(req,res)=>{\r\n    const user= await User.findById(req.params.id);\r\n    try{\r\n      if(user){\r\n        return res.status(200).send({message:\"true\",user:user})\r\n      }else{\r\n        return res.status(401).send(\"user not found\")\r\n      }\r\n    }\r\n    catch(e){\r\n        console.log(e.messaage)\r\n    }\r\n}\r\n"],"file":"user.controller.dev.js"}