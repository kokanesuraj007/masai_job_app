{"version":3,"sources":["user.controller.js"],"names":["User","require","argon2","jwt","exports","register","req","res","_req$body","name","email","password","user","newemail","second","hash","newUser","_newUser","regeneratorRuntime","async","_context","prev","next","body","awrap","findOne","sent","split","abrupt","status","send","role","save","messsage","admin","t0","console","log","stop","verify","token","sign","_objectSpread","expiresIn","messaage","getUser","_context3","findById","params","id","message"],"mappings":"wuBAAA,IAAMA,KAAKC,QAAQ,uBACbC,OAAOD,QAAQ,UACfE,IAAKF,QAAQ,gBACnBG,QAAQC,SAAS,SAAMC,EAAIC,GAAV,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAd,EACeF,EAAIiB,KAAzBd,EADMD,EACNC,KAAKC,EADCF,EACDE,MAAMC,EADLH,EACKG,SADLS,EAAAE,KAAA,EAAAJ,mBAAAM,MAEGxB,KAAKyB,QAAQ,CAACf,MAAMA,KAFvB,KAAA,EAAA,OAETE,EAFSQ,EAAAM,KAGTb,EAASH,EAAMiB,MAAM,KACrBb,EAAOD,EAAS,GAJPO,EAAAE,KAAA,EAAAJ,mBAAAM,MAHEtB,OAAAa,KAAAJ,IAGF,KAAA,EAAA,GAHPI,EAGOK,EAAAM,KAAAN,EAAAC,KAAA,EAFLT,EAEK,OAAAQ,EAAAQ,OAAA,SAQErB,EAAIsB,OAAO,KAAKC,KAAK,wBARvBV,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,GAUM,mBAARR,EAVE,OAAjBE,EAAiB,IAAAhB,KAAMM,CAAAA,MAAAA,EAAIC,SAAVQ,EAAAN,KAAAA,EAAAsB,KAAA,UAAAX,EAAAE,KAAA,GAAAJ,mBAAAM,MAAAR,EAAAgB,QAAAZ,EAAAE,KAAA,GAAA,MAAA,KAAA,GAaLf,EAAIsB,OAAO,KAAKC,KAAK,CAACG,SAAS,4BAA4BC,MAAQlB,IAb9DI,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,OAAAN,EAAA,IAAAhB,KAAA,CAAAU,MAAAA,EAAAC,SAAAI,EAAAN,KAAAA,IAAAW,EAAAE,KAAA,GAAAJ,mBAAAM,MAAAR,EAAAgB,QAAA,KAAA,GAAAzB,EAAAsB,OAAA,KAAAC,KAAA,CAAAG,SAAA,2BAAArB,KAAAI,IAAA,KAAA,GAAAI,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,MAAA,GAuBVgB,QAAQC,IAAIjB,EAAAe,GAAEF,UAvBJ,KAAA,GAAA,IAAA,MAAA,OAAAb,EAAAkB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAITxB,QAAAA,MAAAA,SAAOD,EAAAA,GAAPC,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAJSR,EAAAiB,KAAAb,EAITI,EAJSJ,MAAAC,EAITG,EAJSH,SAITG,EAAAA,KAAAA,EAAAA,mBAAAA,MAJSd,KAAAyB,QAAA,CAAAf,MAAAA,KAITI,KAAAA,EAAAA,OAJSF,EAITE,EAAAA,KAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MA0BKZ,OAAOqC,OAAO3B,EAAKD,SAASA,IA1BjCG,KAAAA,EAAAA,GAAAA,EAAAA,KAAAA,OAJS0B,EAAArC,IAAAsC,KAAAC,cAAA,GAAA9B,GAAA,YAAA,CAkCL+B,UAAU,WA9Bd7B,EAAAA,OAAAA,SAJSP,EAAAuB,KAAA,CAAAc,SAAA,mBAAAJ,MAAAA,EAAA5B,KAAAA,KAITE,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAJSP,EAAAsB,OAAA,KAAAC,KAAA,uBAIThB,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,WAqCRV,QAAQyC,QAAQ,SAAMvC,EAAIC,GAAV,IAAAK,EAAA,OAAAM,mBAAAC,MAAA,SAAA2B,GAAA,OAAA,OAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,KAAA,EAAA,OAAAwB,EAAAxB,KAAA,EAAAJ,mBAAAM,MAzCCxB,KAAA+C,SAAAzC,EAAA0C,OAAAC,KAyCD,KAAA,EAAA,GAzCCrC,EAyCDkC,EAAApB,KAAAoB,EAAAzB,KAAA,EAzCCT,EAyCD,OAAAkC,EAAAlB,OAAA,SAzCCrB,EAAAsB,OAAA,KAAAC,KAAA,CAAAoB,QAAA,OAAAtC,KAAAA,KAyCDkC,EAAAxB,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAwB,EAAAlB,OAAA,SAMDrB,EAAIsB,OAAO,KAAKC,KAAK,mBANpB,KAAA,EAAAgB,EAAAxB,KAAA,GAAA,MAAA,KAAA,GAAAwB,EAAAzB,KAAA,GAAAyB,EAAAX,GAAAW,EAAA,MAAA,GA9ByCrC,QAAI4B,IAAJ5B,EAAAA,GAArBmC,UA8BpB,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAR,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"user.controller.min.js","sourcesContent":["const User=require(\"../model/user.model\");\r\nconst argon2=require(\"argon2\");\r\nconst jwt= require(\"jsonwebtoken\");\r\nexports.register=async(req,res)=>{\r\n    const {name,email,password}=req.body;\r\n    let user= await User.findOne({email:email});\r\n    let newemail=email.split(\"@\");\r\n    let second=newemail[1]\r\n    const hash= await argon2.hash(password);\r\n    try{\r\n        if(user){\r\n            return res.status(400).send(\"user already exists\")\r\n        }else{\r\n            if(second==\"masaischool.com\"){\r\n            const newUser= new User({email,password:hash,name,role:\"admin\"});\r\n            await newUser.save();\r\n            res.status(201).send({messsage:\"admin created sucessfully\",\"admin\":newUser})\r\n            }else{\r\n                const newUser= new User({email,password:hash,name});\r\n            await newUser.save();\r\n            res.status(201).send({messsage:\"user created sucessfully\",\"user\":newUser})\r\n            }\r\n        }\r\n\r\n    }\r\n    catch(e){\r\n       console.log(e.messsage)\r\n    }\r\n}\r\n\r\nexports.login=async(req,res)=>{\r\n    const {email,password}=  req.body;\r\n    const user= await User.findOne({email});\r\n    if(await argon2.verify(user.password,password)){\r\n        const token=jwt.sign({\r\n            ...user\r\n        },\"Vikalp@99\",{\r\n            expiresIn:\"7 days\"\r\n        })\r\n        return res.send({messaage:\"Login sucessfull\",token,user:user})\r\n    };\r\n    res.status(401).send(\"Invalid Crendential\")\r\n}\r\n\r\nexports.getUser=async(req,res)=>{\r\n    const user= await User.findById(req.params.id);\r\n    try{\r\n      if(user){\r\n        return res.status(200).send({message:\"true\",user:user})\r\n      }else{\r\n        return res.status(401).send(\"user not found\")\r\n      }\r\n    }\r\n    catch(e){\r\n        console.log(e.messaage)\r\n    }\r\n}\r\n"]}